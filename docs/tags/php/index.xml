<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PHP on dakatsuka&#39;s blog</title>
    <link>https://blog.dakatsuka.jp/tags/php.html</link>
    <description>Recent content in PHP on dakatsuka&#39;s blog</description>
    <image>
      <title>dakatsuka&#39;s blog</title>
      <url>https://blog.dakatsuka.jp/images/card.png</url>
      <link>https://blog.dakatsuka.jp/images/card.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 28 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.dakatsuka.jp/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Symfony2でサブドメインに対応したサイトを作る</title>
      <link>https://blog.dakatsuka.jp/2014/08/28/symfony2-subdomain.html</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2014/08/28/symfony2-subdomain.html</guid>
      <description>Symfony2では特定のBundleをサブドメインに切り出すことができる。正しくはBundle毎に任意のドメインを割り当てることができる。</description>
    </item>
    
    <item>
      <title>Symfony2アプリをTravisでCIする</title>
      <link>https://blog.dakatsuka.jp/2014/04/03/symfony2-travis-ci.html</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2014/04/03/symfony2-travis-ci.html</guid>
      <description>.travis.ymlを下記のようにした。TravisはComposerもPHPUnitもパスが通った状態になっているため、ダウンロードする</description>
    </item>
    
    <item>
      <title>Symfony2ではRelationshipsにAbstract classやInterfaceが指定できる</title>
      <link>https://blog.dakatsuka.jp/2013/12/19/resolve-target-entity.html</link>
      <pubDate>Thu, 19 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/12/19/resolve-target-entity.html</guid>
      <description>Doctrine2のOneToManyやManyToManyのtargetEntityにはAbstract classやInterfaceを指</description>
    </item>
    
    <item>
      <title>HomebrewでPHP5.5を入れようと思ったら手間取った話</title>
      <link>https://blog.dakatsuka.jp/2013/12/07/install-php55-on-mavericks.html</link>
      <pubDate>Sat, 07 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/12/07/install-php55-on-mavericks.html</guid>
      <description>MavericksにHomebrewを使ってPHP 5.5をインストールしようと思ったら次のようなエラーが出てきた。 configure: error: freetype.h not found. 対処法はHome</description>
    </item>
    
    <item>
      <title>Symfony2でFunctional Testを快適に行うには</title>
      <link>https://blog.dakatsuka.jp/2013/12/05/symfony2-functional-test.html</link>
      <pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/12/05/symfony2-functional-test.html</guid>
      <description>前置き Symfony2を構成するサービスはほぼDIコンテナの上に乗っているので、ドメインとデータベース、フレームワークがそれぞれ疎結合になっ</description>
    </item>
    
    <item>
      <title>Monologのログ出力先をFluentdに変更してみた</title>
      <link>https://blog.dakatsuka.jp/2013/10/18/monolog-fluentd.html</link>
      <pubDate>Fri, 18 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/10/18/monolog-fluentd.html</guid>
      <description>Symfony2にも採用されているMonologは、HandlerやFormatterを差し替えることでログの出力先やフォーマットを自由に変</description>
    </item>
    
    <item>
      <title>ついカッとなってPHPでMaybeモナドを実装した</title>
      <link>https://blog.dakatsuka.jp/2013/09/03/php-maybe-monad.html</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/09/03/php-maybe-monad.html</guid>
      <description>PHPを仕事で使っているとis_nullとかissetとかemptyとか===とかの存在にイライラしてくる訳ですよ。そこでなんちゃってMay</description>
    </item>
    
    <item>
      <title>PHPで無限リストを作る</title>
      <link>https://blog.dakatsuka.jp/2013/09/02/php-infinite-list.html</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/09/02/php-infinite-list.html</guid>
      <description>PHPで range(0, 10000000); とかやるとメモリ不足で死んでしまうので、無限ループするイテレータを作ってみましょう。 &amp;lt;?php class Stream implements \Iterator { private $position; private $offset; private $limit; public function __construct($offset, $limit = null) { $this-&amp;gt;position = $offset;</description>
    </item>
    
    <item>
      <title>Symfony2(Doctrine2)でENUMを使うならDoctrineEnumBundleが便利</title>
      <link>https://blog.dakatsuka.jp/2013/08/13/doctrine-enum-bundle.html</link>
      <pubDate>Tue, 13 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/08/13/doctrine-enum-bundle.html</guid>
      <description>DoctrineEnumBundleというBundleを導入することによって、Doctrine2でMySQLのENUM型を扱うことができます</description>
    </item>
    
    <item>
      <title>PHPのmcrypt関数が遅すぎて辛い</title>
      <link>https://blog.dakatsuka.jp/2013/08/12/php-mcrypt-is-too-slow.html</link>
      <pubDate>Mon, 12 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/08/12/php-mcrypt-is-too-slow.html</guid>
      <description>DES-ECBの暗号・復号を10万回繰り返すベンチマークを取ってみたらmcrypt関数が遅すぎて涙が出てきました。PHPのことなのでもっと速</description>
    </item>
    
    <item>
      <title>PHP 5.4のトレイトで読み取り専用配列を実装してみる</title>
      <link>https://blog.dakatsuka.jp/2013/03/10/php54-trait-readonly-array.html</link>
      <pubDate>Sun, 10 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2013/03/10/php54-trait-readonly-array.html</guid>
      <description>traitを使って何か作ってみようと思い立ち、読み取り専用の配列を実装してみました。配列として扱いたい（例えばforeachで回したいとか）</description>
    </item>
    
    <item>
      <title>QRコードを生成するPHP拡張モジュールをインストール</title>
      <link>https://blog.dakatsuka.jp/2007/05/24/qr.html</link>
      <pubDate>Thu, 24 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://blog.dakatsuka.jp/2007/05/24/qr.html</guid>
      <description>必要なパッケージやインストールの仕方をメモしておきます。モジュールの使用方法やDebian以外の環境の人は、こちらの記事（讃容日記）を見たほ</description>
    </item>
    
  </channel>
</rss>
